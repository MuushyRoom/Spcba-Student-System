
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.Random;

import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author muushyroom
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();

        //tf_username.setVisible(false);
       // tf_password.setVisible(false);
       // login_button.setVisible(false);
       
       RECAPTHA_PANEL.setVisible(false);
        ///--------------------------
         char[] array = "qrstuvwxyz!1234567890@#$%^&*()ABCDE".toCharArray();

        Random rand = new Random();

        for (int i = 0; i < array.length; i++) {

            int randomIndexToSwap = rand.nextInt(array.length);
            char temp = array[randomIndexToSwap];
            array[randomIndexToSwap] = array[i];
            array[i] = temp;

        }
        //STRING NUMBER
        // String ranCode = char.toString(array[0]) + array[1];
        String str = String.valueOf(array);
        // recommended way
        str = new String(array).substring(0, 5);
        spcba_code.setText(str);

        //----------------
    }
    
    
    static final String DB_URL = "jdbc:mysql://localhost/spcba_student_system";
    static final String user = "root";
    static final String password = "";

    int counter = 0;

    public void genNew() {

        ///--------------------------
         char[] array = "qrstuvwxyz!1234567890@#$%^&*()ABCDE".toCharArray();

        Random rand = new Random();

        for (int i = 0; i < array.length; i++) {

            int randomIndexToSwap = rand.nextInt(array.length);
            char temp = array[randomIndexToSwap];
            array[randomIndexToSwap] = array[i];
            array[i] = temp;

        }
        //STRING NUMBER
        // String ranCode = char.toString(array[0]) + array[1];
        String str = String.valueOf(array);
        // recommended way
        str = new String(array).substring(0, 5);
        spcba_code.setText(str);

        //----------------
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spcba_login_panel = new javax.swing.JPanel();
        spcba_title1 = new javax.swing.JLabel();
        spcba_logo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        RECAPTHA_PANEL = new javax.swing.JPanel();
        tf_recaptcha = new javax.swing.JTextField();
        recaptha_title = new javax.swing.JLabel();
        spcba_code = new javax.swing.JLabel();
        submit_recaptcha = new javax.swing.JButton();
        myspcbaLogin_title = new javax.swing.JLabel();
        tf_username = new javax.swing.JTextField();
        tf_password = new javax.swing.JTextField();
        login_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("mySPCBA Login");
        setBackground(new java.awt.Color(51, 153, 0));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        spcba_login_panel.setBackground(new java.awt.Color(0, 153, 0));
        spcba_login_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        spcba_login_panel.setForeground(new java.awt.Color(51, 153, 0));
        spcba_login_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        spcba_title1.setFont(new java.awt.Font("SansSerif", 1, 32)); // NOI18N
        spcba_title1.setText("San Pedro College of Business Administration");
        spcba_login_panel.add(spcba_title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, -1, -1));

        spcba_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/spcbaheader45.png"))); // NOI18N
        spcba_login_panel.add(spcba_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(0, 204, 51));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(224, 183, 81), 2, true));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        RECAPTHA_PANEL.setBackground(new java.awt.Color(0, 204, 51));
        RECAPTHA_PANEL.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(224, 183, 81), 3, true));
        RECAPTHA_PANEL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tf_recaptcha.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        tf_recaptcha.setForeground(new java.awt.Color(102, 102, 102));
        tf_recaptcha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_recaptcha.setText("Enter the code above");
        tf_recaptcha.setToolTipText("Enter the code above");
        tf_recaptcha.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        tf_recaptcha.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tf_recaptcha.setHighlighter(null);
        tf_recaptcha.setName(""); // NOI18N
        tf_recaptcha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_recaptchaFocusLost(evt);
            }
        });
        tf_recaptcha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_recaptchaMouseClicked(evt);
            }
        });
        tf_recaptcha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_recaptchaKeyPressed(evt);
            }
        });
        RECAPTHA_PANEL.add(tf_recaptcha, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 210, 40));

        recaptha_title.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        recaptha_title.setText("reCAPTCHA");
        RECAPTHA_PANEL.add(recaptha_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        spcba_code.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        spcba_code.setForeground(new java.awt.Color(255, 0, 0));
        spcba_code.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spcba_code.setText("spcba_code");
        RECAPTHA_PANEL.add(spcba_code, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 210, 39));

        submit_recaptcha.setBackground(new java.awt.Color(51, 51, 51));
        submit_recaptcha.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        submit_recaptcha.setForeground(new java.awt.Color(255, 255, 255));
        submit_recaptcha.setText("Submit");
        submit_recaptcha.setBorder(null);
        submit_recaptcha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submit_recaptchaMouseClicked(evt);
            }
        });
        RECAPTHA_PANEL.add(submit_recaptcha, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 110, 40));

        jPanel1.add(RECAPTHA_PANEL, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 290, 240));

        myspcbaLogin_title.setFont(new java.awt.Font("SansSerif", 1, 32)); // NOI18N
        myspcbaLogin_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        myspcbaLogin_title.setText("mySPCBA Login");
        jPanel1.add(myspcbaLogin_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 340, 50));

        tf_username.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        tf_username.setForeground(new java.awt.Color(102, 102, 102));
        tf_username.setText("Username");
        tf_username.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tf_username.setHighlighter(null);
        tf_username.setName(""); // NOI18N
        tf_username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_usernameFocusLost(evt);
            }
        });
        tf_username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_usernameMouseClicked(evt);
            }
        });
        tf_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_usernameKeyPressed(evt);
            }
        });
        jPanel1.add(tf_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 240, 40));

        tf_password.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        tf_password.setForeground(new java.awt.Color(102, 102, 102));
        tf_password.setText("Password");
        tf_password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_passwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_passwordFocusLost(evt);
            }
        });
        tf_password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_passwordMouseClicked(evt);
            }
        });
        tf_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_passwordKeyPressed(evt);
            }
        });
        jPanel1.add(tf_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 240, 40));

        login_button.setBackground(new java.awt.Color(51, 51, 51));
        login_button.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        login_button.setForeground(new java.awt.Color(255, 255, 255));
        login_button.setText("Login");
        login_button.setBorder(null);
        login_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_buttonMouseClicked(evt);
            }
        });
        login_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(login_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 110, 40));

        spcba_login_panel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 990, 300));

        getContentPane().add(spcba_login_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 670));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void submit_recaptchaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submit_recaptchaMouseClicked
        // TODO add your handling code here:
        String userCode = tf_recaptcha.getText();

        if (userCode.equals(spcba_code.getText())) {

            RECAPTHA_PANEL.setVisible(false);
            tf_username.setVisible(true);
            tf_password.setVisible(true);
            login_button.setVisible(true);
            counter = 0;
        } else if (!(userCode.equals(spcba_code.getText())) && counter == 2) {
            tf_recaptcha.setText("Invalid Code!");
            genNew();
            counter = 0;
            tf_recaptcha.setForeground(Color.red);
            tf_recaptcha.setText("Created new Captcha!");
        } else if (!(userCode.equals(spcba_code.getText()))) {
            tf_recaptcha.setForeground(Color.red);
            tf_recaptcha.setText("Invalid Code!");
            counter++;

        }
    }//GEN-LAST:event_submit_recaptchaMouseClicked

    private void tf_usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_usernameMouseClicked
        String str = tf_username.getText();

        if (!(str.contains("Username"))) {

        } else {
            tf_username.setForeground(Color.black);
            tf_username.setText("");
        }
    }//GEN-LAST:event_tf_usernameMouseClicked

    private void tf_usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_usernameFocusLost
        String str = tf_username.getText();

        if (str.isBlank()) {
            tf_username.setText("Username");
            tf_username.setForeground(Color.gray);
        }

    }//GEN-LAST:event_tf_usernameFocusLost

    private void tf_usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_usernameKeyPressed
        if (tf_username.getText().equals("Username")) {
            tf_username.setText("");
            tf_username.setForeground(Color.black);
        }
    }//GEN-LAST:event_tf_usernameKeyPressed

    private void login_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_buttonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_login_buttonMouseClicked

    private void tf_passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_passwordMouseClicked
        String str = tf_password.getText();

        if (!(str.contains("Password"))) {

        } else {
            tf_password.setForeground(Color.black);
            tf_password.setText("");
        }
    }//GEN-LAST:event_tf_passwordMouseClicked

    private void tf_passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_passwordFocusLost
        String str = tf_password.getText();

        if (str.isBlank()) {
            tf_password.setText("Password");
            tf_password.setForeground(Color.gray);
        }
    }//GEN-LAST:event_tf_passwordFocusLost

    private void tf_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_passwordKeyPressed
        if (tf_password.getText().equals("Password")) {
            tf_password.setForeground(Color.black);
            tf_password.setText("");
        }
    }//GEN-LAST:event_tf_passwordKeyPressed

    private void tf_passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_passwordFocusGained
        if (tf_password.getText().equals("Password")) {
            tf_password.setForeground(Color.black);
            tf_password.setText("");
        }
    }//GEN-LAST:event_tf_passwordFocusGained

    private void tf_recaptchaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_recaptchaKeyPressed
        if (tf_recaptcha.getText().equals("Enter the code above") || tf_recaptcha.getText().equals("Invalid Code!") || tf_recaptcha.getText().equals("Created new Captcha!")) {
            tf_recaptcha.setForeground(Color.black);
            tf_recaptcha.setText("");
        }
    }//GEN-LAST:event_tf_recaptchaKeyPressed

    private void tf_recaptchaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_recaptchaFocusLost
        if (tf_recaptcha.getText().isBlank()) {
            tf_recaptcha.setForeground(Color.gray);
            tf_recaptcha.setText("Enter the code above");
        }
    }//GEN-LAST:event_tf_recaptchaFocusLost

    private void tf_recaptchaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_recaptchaMouseClicked
        if (tf_recaptcha.getText().equals("Enter the code above") || tf_recaptcha.getText().equals("Invalid Code!") || tf_recaptcha.getText().equals("Created new Captcha!")) {
            tf_recaptcha.setForeground(Color.black);
            tf_recaptcha.setText("");
        }
    }//GEN-LAST:event_tf_recaptchaMouseClicked

    private void login_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_buttonActionPerformed
             
        
        String username = tf_username.getText();
        String password = tf_password.getText();
        
        
       
        
        try(Connection conn = DriverManager.getConnection(DB_URL, user, password);
         Statement stmt = conn.createStatement();) {		      
         
  
        

    
         String sql = "SELECT * FROM `Students` WHERE username = \""+username+"\" AND password = \""+password+"\"";
         ResultSet rs = stmt.executeQuery(sql);
         rs = stmt.executeQuery(sql);
         
         while (rs.next())
{
  if(rs.getString("username").equals(username)&& rs.getString("password").equals(password)){
         
        close();
        Student_System student_system = new Student_System();
        student_system.setVisible(true);
         }
        
}
         
       
        
        
         //rs.close();
      } catch (SQLException e) {
         e.printStackTrace();
      } 
        
    }//GEN-LAST:event_login_buttonActionPerformed
    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        Connection conn1 = null;

        try {
            // connect way #1

            conn1 = DriverManager.getConnection(DB_URL, user, password);
            if (conn1 != null) {
                System.out.println("Connected to the database SPCBA STUDENT DATABASE");

                //Statement stmt = conn1.createStatement();   //Creating Statement.
                //Executing Statement.
                // stmt.executeUpdate("create table `ScoreHistory`(`id` integer, `Player1` varchar(20), `Player2` varchar(20), `Score` integer)");
                //  stmt.executeUpdate("insert into `ScoreHistory` values(3, 'Black', 'White', 10)");
                // stmt.executeUpdate("insert into `ScoreHistory` values(4, 'Black', 'White', 10)");
            }

        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();

        } finally {
            if (conn1 != null) {
                try {
                    conn1.close();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel RECAPTHA_PANEL;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton login_button;
    private javax.swing.JLabel myspcbaLogin_title;
    private javax.swing.JLabel recaptha_title;
    private javax.swing.JLabel spcba_code;
    private javax.swing.JPanel spcba_login_panel;
    private javax.swing.JLabel spcba_logo;
    private javax.swing.JLabel spcba_title1;
    private javax.swing.JButton submit_recaptcha;
    private javax.swing.JTextField tf_password;
    private javax.swing.JTextField tf_recaptcha;
    private javax.swing.JTextField tf_username;
    // End of variables declaration//GEN-END:variables
}
